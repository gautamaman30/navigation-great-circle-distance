{"version":3,"sources":["input.js","output.js","about.js","App.js","index.js"],"names":["Input","props","onSubmit","bind","event","preventDefault","lng1","this","refs","x1","value","lat1","y1","lng2","x2","lat2","y2","getLocations","form","reset","className","ref","type","placeholder","React","Component","Display","ans","About","src","href","App","haversine","state","xValue1","parseFloat","yValue1","xValue2","yValue2","arr","push","alert","diff_lng","diff_lat","a","Math","pow","sin","cos","c","asin","sqrt","setState","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb89c6b1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './app.css';\r\n\r\nclass Input extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.onSubmit=this.onSubmit.bind(this);\r\n  }\r\n  onSubmit(event){\r\n    event.preventDefault();\r\n    let lng1=this.refs.x1.value;\r\n    let lat1=this.refs.y1.value;\r\n    let lng2=this.refs.x2.value;\r\n    let lat2=this.refs.y2.value;\r\n    if(lng1 && lat1 && lng2 && lat2){\r\n      this.props.getLocations(lng1,lat1,lng2,lat2);\r\n      this.refs.form.reset();\r\n    }\r\n  }\r\n  render(){\r\n    return(\r\n      <div className=\"input-form\">\r\n        <h2 className=\"range-head\">Range: Latitude -90° to 90°, Longitude -180° to 180°</h2>\r\n        <br/>\r\n        <form ref=\"form\" className=\"form\"onSubmit={this.onSubmit}>\r\n          <p className=\"ab\">Enter 1st coordinates:</p>\r\n          <input ref=\"x1\" type=\"text\" placeholder=\"enter longitude...\" className=\"xy\"/>&emsp;&emsp;\r\n          <input ref=\"y1\" type=\"text\" placeholder=\"enter latitude...\" className=\"xy\"/>\r\n          <br/>\r\n          <p className=\"ab\">Enter 2nd coordinates:</p>\r\n          <input ref=\"x2\" type=\"text\" placeholder=\"enter longitude...\" className=\"xy\"/>&emsp;&emsp;\r\n          <input ref=\"y2\" type=\"text\" placeholder=\"enter latitude...\" className=\"xy\"/>\r\n          <br/>\r\n          <br/>\r\n          <button type=\"submit\">Calculate</button>\r\n          <br/>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Input;\r\n","import React from 'react';\r\nimport './app.css';\r\n\r\nclass Display extends React.Component {\r\n  render(){\r\n    return(\r\n      <div className=\"output-result\">\r\n        <br/>\r\n        <h2>Great Circle Distance: {this.props.ans} km</h2>\r\n        <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Display;\r\n","import React from 'react';\r\nimport './app.css';\r\n\r\nclass About extends React.Component {\r\n  render(){\r\n    return(\r\n      <div className=\"info\">\r\n        <hr/>\r\n        <h2 className=\"info-head\">How This Works?</h2>\r\n        <p className=\"info-detail\">  <img src=\"https://upload.wikimedia.org/wikipedia/commons/c/cb/Illustration_of_great-circle_distance.svg\"/>\r\n            The distance between two points in Euclidean space is the length of a straight line between them, but\r\n            on the sphere there are no straight lines. In spaces with curvature, straight lines are replaced by\r\n            geodesics. Geodesics on the sphere are circles on the sphere whose centers coincide with the center of the sphere,\r\n            and are called great circles.\r\n          </p>\r\n        <br/>\r\n        <p className=\"head-haversine\">Haversine formula:</p>\r\n        <p className=\"info-haversine\">d is the geodesics distance and r is the radius of sphere</p>\r\n        <p className=\"info-haversine\">and d = 2 * r * arcsin(sqrt(h))</p>\r\n        <p className=\"info-haversine\">where h =  hav(lat2-lat1) + ( cos(lat1) * cos(lat2) * hav(lng2-lng1) )</p>\r\n        <p className=\"info-haversine\">and hav(θ) =  sin^2(θ/2)</p>\r\n        <a href=\"https://en.wikipedia.org/wiki/Haversine_formula#targetText=The%20haversine%20formula%20determines%20the,and%20angles%20of%20spherical%20triangles.\" className=\"link\">more detail</a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default About;\r\n","import React from 'react';\nimport Input from './input';\nimport Display from './output';\nimport About from './about';\nimport './app.css';\n\nvar value=0.0;\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.getLocations=this.getLocations.bind(this);\n    this.haversine=this.haversine.bind(this);\n    this.state={value: value};\n  }\n  getLocations(x1,y1,x2,y2){\n    let xValue1=parseFloat(x1);\n    let yValue1=parseFloat(y1);\n    let xValue2=parseFloat(x2);\n    let yValue2=parseFloat(y2);\n    if((xValue1<180 && xValue1>-180) && (xValue2<180 && xValue2>-180) && (yValue1<90 && xValue1>-90) && (yValue2<90 && yValue2>-90)){\n      let arr = [];\n      arr.push((xValue1*3.14)/180);\n      arr.push((yValue1*3.14)/180);\n      arr.push((xValue2*3.14)/180);\n      arr.push((yValue2*3.14)/180);\n      this.haversine(arr);\n    }\n    else{\n      alert(\"Please enter the coordinates within the range\");\n    }\n  }\n  haversine(arr){\n    let diff_lng = arr[2]-arr[0];\n    let diff_lat = arr[3]-arr[1];\n    let a = Math.pow(Math.sin(diff_lat/2) ,2) +(Math.cos(arr[1])*Math.cos(arr[3])*(Math.pow(Math.sin(diff_lng/2),2)));\n    let c = 2 * 6371* (Math.asin(Math.sqrt(a)));\n    this.setState({value: c});\n  }\n  render(){\n    return(\n      <div id=\"app\">\n        <Input getLocations={this.getLocations}/>\n        <Display ans={this.state.value}/>\n        <About/>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './app.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}